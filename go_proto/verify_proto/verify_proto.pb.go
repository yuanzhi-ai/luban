// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: protocal/verify_proto/verify_proto.proto

// 人机验证等相关

package verify_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetVerCodeReq 获取验证码请求包
type GetVerCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVerCodeReq) Reset() {
	*x = GetVerCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocal_verify_proto_verify_proto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerCodeReq) ProtoMessage() {}

func (x *GetVerCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_protocal_verify_proto_verify_proto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerCodeReq.ProtoReflect.Descriptor instead.
func (*GetVerCodeReq) Descriptor() ([]byte, []int) {
	return file_protocal_verify_proto_verify_proto_proto_rawDescGZIP(), []int{0}
}

// 获取验证码回包
type GetVerCodeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeId    string `protobuf:"bytes,1,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`          // 验证码的id
	Base64Img string `protobuf:"bytes,2,opt,name=base64_img,json=base64Img,proto3" json:"base64_img,omitempty"` // base64表示的验证码
	RetCode   int32  `protobuf:"varint,3,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`      // 错误码 0成功 其他失败
}

func (x *GetVerCodeRsp) Reset() {
	*x = GetVerCodeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocal_verify_proto_verify_proto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerCodeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerCodeRsp) ProtoMessage() {}

func (x *GetVerCodeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_protocal_verify_proto_verify_proto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerCodeRsp.ProtoReflect.Descriptor instead.
func (*GetVerCodeRsp) Descriptor() ([]byte, []int) {
	return file_protocal_verify_proto_verify_proto_proto_rawDescGZIP(), []int{1}
}

func (x *GetVerCodeRsp) GetCodeId() string {
	if x != nil {
		return x.CodeId
	}
	return ""
}

func (x *GetVerCodeRsp) GetBase64Img() string {
	if x != nil {
		return x.Base64Img
	}
	return ""
}

func (x *GetVerCodeRsp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

// 验证验证码请求包
type VerifyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeId string `protobuf:"bytes,1,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"` // 验证码的id
	Ans    string `protobuf:"bytes,2,opt,name=ans,proto3" json:"ans,omitempty"`                     // 提交的答案
}

func (x *VerifyCodeReq) Reset() {
	*x = VerifyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocal_verify_proto_verify_proto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeReq) ProtoMessage() {}

func (x *VerifyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_protocal_verify_proto_verify_proto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeReq.ProtoReflect.Descriptor instead.
func (*VerifyCodeReq) Descriptor() ([]byte, []int) {
	return file_protocal_verify_proto_verify_proto_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyCodeReq) GetCodeId() string {
	if x != nil {
		return x.CodeId
	}
	return ""
}

func (x *VerifyCodeReq) GetAns() string {
	if x != nil {
		return x.Ans
	}
	return ""
}

// 验证验证码回包
type VerifyCodeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32 `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"` //错误码 0成功 其他失败
}

func (x *VerifyCodeRsp) Reset() {
	*x = VerifyCodeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocal_verify_proto_verify_proto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCodeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeRsp) ProtoMessage() {}

func (x *VerifyCodeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_protocal_verify_proto_verify_proto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeRsp.ProtoReflect.Descriptor instead.
func (*VerifyCodeRsp) Descriptor() ([]byte, []int) {
	return file_protocal_verify_proto_verify_proto_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyCodeRsp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

var File_protocal_verify_proto_verify_proto_proto protoreflect.FileDescriptor

var file_protocal_verify_proto_verify_proto_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x61, 0x6c, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x22, 0x62, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x5f, 0x69, 0x6d,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x49,
	0x6d, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a,
	0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6e, 0x73, 0x22, 0x2a, 0x0a, 0x0d, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x9c, 0x01, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x12, 0x48, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0a, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x42, 0x35, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x61, 0x6e, 0x7a, 0x68, 0x69, 0x2d, 0x61, 0x69, 0x2f,
	0x6c, 0x75, 0x62, 0x61, 0x6e, 0x2f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_protocal_verify_proto_verify_proto_proto_rawDescOnce sync.Once
	file_protocal_verify_proto_verify_proto_proto_rawDescData = file_protocal_verify_proto_verify_proto_proto_rawDesc
)

func file_protocal_verify_proto_verify_proto_proto_rawDescGZIP() []byte {
	file_protocal_verify_proto_verify_proto_proto_rawDescOnce.Do(func() {
		file_protocal_verify_proto_verify_proto_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocal_verify_proto_verify_proto_proto_rawDescData)
	})
	return file_protocal_verify_proto_verify_proto_proto_rawDescData
}

var file_protocal_verify_proto_verify_proto_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protocal_verify_proto_verify_proto_proto_goTypes = []interface{}{
	(*GetVerCodeReq)(nil), // 0: verify_proto.GetVerCodeReq
	(*GetVerCodeRsp)(nil), // 1: verify_proto.GetVerCodeRsp
	(*VerifyCodeReq)(nil), // 2: verify_proto.verifyCodeReq
	(*VerifyCodeRsp)(nil), // 3: verify_proto.verifyCodeRsp
}
var file_protocal_verify_proto_verify_proto_proto_depIdxs = []int32{
	0, // 0: verify_proto.Verify.GetVerCode:input_type -> verify_proto.GetVerCodeReq
	2, // 1: verify_proto.Verify.verifyCode:input_type -> verify_proto.verifyCodeReq
	1, // 2: verify_proto.Verify.GetVerCode:output_type -> verify_proto.GetVerCodeRsp
	3, // 3: verify_proto.Verify.verifyCode:output_type -> verify_proto.verifyCodeRsp
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protocal_verify_proto_verify_proto_proto_init() }
func file_protocal_verify_proto_verify_proto_proto_init() {
	if File_protocal_verify_proto_verify_proto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocal_verify_proto_verify_proto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocal_verify_proto_verify_proto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerCodeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocal_verify_proto_verify_proto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocal_verify_proto_verify_proto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCodeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocal_verify_proto_verify_proto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocal_verify_proto_verify_proto_proto_goTypes,
		DependencyIndexes: file_protocal_verify_proto_verify_proto_proto_depIdxs,
		MessageInfos:      file_protocal_verify_proto_verify_proto_proto_msgTypes,
	}.Build()
	File_protocal_verify_proto_verify_proto_proto = out.File
	file_protocal_verify_proto_verify_proto_proto_rawDesc = nil
	file_protocal_verify_proto_verify_proto_proto_goTypes = nil
	file_protocal_verify_proto_verify_proto_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VerifyClient is the client API for Verify service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VerifyClient interface {
	// 获取验证码
	GetVerCode(ctx context.Context, in *GetVerCodeReq, opts ...grpc.CallOption) (*GetVerCodeRsp, error)
	// 验证验证码
	VerifyCode(ctx context.Context, in *VerifyCodeReq, opts ...grpc.CallOption) (*VerifyCodeRsp, error)
}

type verifyClient struct {
	cc grpc.ClientConnInterface
}

func NewVerifyClient(cc grpc.ClientConnInterface) VerifyClient {
	return &verifyClient{cc}
}

func (c *verifyClient) GetVerCode(ctx context.Context, in *GetVerCodeReq, opts ...grpc.CallOption) (*GetVerCodeRsp, error) {
	out := new(GetVerCodeRsp)
	err := c.cc.Invoke(ctx, "/verify_proto.Verify/GetVerCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *verifyClient) VerifyCode(ctx context.Context, in *VerifyCodeReq, opts ...grpc.CallOption) (*VerifyCodeRsp, error) {
	out := new(VerifyCodeRsp)
	err := c.cc.Invoke(ctx, "/verify_proto.Verify/verifyCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VerifyServer is the server API for Verify service.
type VerifyServer interface {
	// 获取验证码
	GetVerCode(context.Context, *GetVerCodeReq) (*GetVerCodeRsp, error)
	// 验证验证码
	VerifyCode(context.Context, *VerifyCodeReq) (*VerifyCodeRsp, error)
}

// UnimplementedVerifyServer can be embedded to have forward compatible implementations.
type UnimplementedVerifyServer struct {
}

func (*UnimplementedVerifyServer) GetVerCode(context.Context, *GetVerCodeReq) (*GetVerCodeRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVerCode not implemented")
}
func (*UnimplementedVerifyServer) VerifyCode(context.Context, *VerifyCodeReq) (*VerifyCodeRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyCode not implemented")
}

func RegisterVerifyServer(s *grpc.Server, srv VerifyServer) {
	s.RegisterService(&_Verify_serviceDesc, srv)
}

func _Verify_GetVerCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVerCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VerifyServer).GetVerCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/verify_proto.Verify/GetVerCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VerifyServer).GetVerCode(ctx, req.(*GetVerCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Verify_VerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VerifyServer).VerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/verify_proto.Verify/VerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VerifyServer).VerifyCode(ctx, req.(*VerifyCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Verify_serviceDesc = grpc.ServiceDesc{
	ServiceName: "verify_proto.Verify",
	HandlerType: (*VerifyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVerCode",
			Handler:    _Verify_GetVerCode_Handler,
		},
		{
			MethodName: "verifyCode",
			Handler:    _Verify_VerifyCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protocal/verify_proto/verify_proto.proto",
}
